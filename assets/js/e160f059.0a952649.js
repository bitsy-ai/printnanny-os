"use strict";(self.webpackChunkprintnanny_docs=self.webpackChunkprintnanny_docs||[]).push([[5076],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>m});var i=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},a=Object.keys(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var c=i.createContext({}),l=function(n){var e=i.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},d=function(n){var e=l(n.components);return i.createElement(c.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},u=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,c=n.parentName,d=s(n,["components","mdxType","originalType","parentName"]),u=l(t),m=r,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return t?i.createElement(h,o(o({ref:e},d),{},{components:t})):i.createElement(h,o({ref:e},d))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s.mdxType="string"==typeof n?n:r,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3999:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:3},o="Command-line Interface",s={unversionedId:"whats-inside/command-line-interface",id:"whats-inside/command-line-interface",title:"Command-line Interface",description:"PrintNanny's CLI is the glue between components/services.",source:"@site/docs/whats-inside/command-line-interface.md",sourceDirName:"whats-inside",slug:"/whats-inside/command-line-interface",permalink:"/docs/whats-inside/command-line-interface",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"quickStartSidebar",previous:{title:"Code Signing",permalink:"/docs/whats-inside/code-signing"},next:{title:"Update PrintNanny OS",permalink:"/docs/update-printnanny-os"}},c={},l=[{value:"View Source",id:"view-source",level:2},{value:"Overview",id:"overview",level:2},{value:"Config",id:"config",level:2},{value:"Device dashboard",id:"device-dashboard",level:2},{value:"MQTT event publisher/subscriber",id:"mqtt-event-publishersubscriber",level:2},{value:"Janus Gateway Admin",id:"janus-gateway-admin",level:2},{value:"Remote control",id:"remote-control",level:2}],d={toc:l};function p(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,i.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"command-line-interface"},"Command-line Interface"),(0,r.kt)("p",null,"PrintNanny's CLI is the glue between components/services."),(0,r.kt)("h2",{id:"view-source"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/bitsy-ai/printnanny-cli"},"View Source")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"PrintNanny's CLI is used to interact with device/user configuration, publish events, and run PrintNanny worker/services."),(0,r.kt)("p",null,"The CLI is available when you SSH into your PrintNanny device."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nPrintNanny Command-line Interface\n\nUSAGE:\n    printnanny-cli [OPTIONS] <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -v               Sets the level of verbosity\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    config         Interact with PrintNanny device configuration and user settings\n    dash           PrintNanny device dashboard and system status\n    event          Run MQTT-based event pubish/subscribe workers\n    help           Print this message or the help of the given subcommand(s)\n    janus-admin    Interact with Janus admin/monitoring APIs https://janus.conf.meetecho.com/docs/admin.html\n    remote         Run pre-configured event/command handler\n")),(0,r.kt)("h2",{id:"config"},"Config"),(0,r.kt)("p",null,"Get, set, and sync PrintNanny device configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nInteract with PrintNanny device configuration and user settings\n\nUSAGE:\n    printnanny-cli config [SUBCOMMAND]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    get     Print PrintNanny config to console\n    help    Print this message or the help of the given subcommand(s)\n    set     Sets PrintNanny config fragments from environment variables\n    show    Print PrintNanny config to console\n    sync    Synchronize device with PrintNanny Cloud\n")),(0,r.kt)("h2",{id:"device-dashboard"},"Device dashboard"),(0,r.kt)("p",null,"Start PrintNanny's device dashboard and status page."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nPrintNanny device dashboard and system status\n\nUSAGE:\n    printnanny-cli dash\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n")),(0,r.kt)("h2",{id:"mqtt-event-publishersubscriber"},"MQTT event publisher/subscriber"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nRun MQTT-based event publish/subscribe workers\n\nUSAGE:\n    printnanny-cli event <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    help         Print this message or the help of the given subcommand(s)\n    publish      Publish event to MQTT topic\n    subscribe    Subscribe to events from MQTT topic\n")),(0,r.kt)("h2",{id:"janus-gateway-admin"},"Janus Gateway Admin"),(0,r.kt)("p",null,"Manage Janus WebRTC Gateway."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nInteract with Janus admin/monitoring APIs https://janus.conf.meetecho.com/docs/admin.html\n\nUSAGE:\n    printnanny-cli janus-admin [ARGS]\n\nARGS:\n    <endpoint>    Janus admin/monitoring API endpoint [default: add-token] [possible values: get-status, info, ping, add-token, remove-token, list-tokens, test-stun]\n    <plugins>     Commaseparated list of plugins used to scope token access. [default: janus.plugin.echotest,janus.plugin.streaming]\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n")),(0,r.kt)("h2",{id:"remote-control"},"Remote control"),(0,r.kt)("p",null,"Pre-configured remote event/command handlers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"printnanny 0.23.0 printnanny-cli-g193c97d\nRun pre-configured event/command handler\n\nUSAGE:\n    printnanny-cli remote [OPTIONS] --event <event>\n\nOPTIONS:\n    -d, --dryrun           Print output but do not run. Ansible playbooks executed with --check flag\n    -e, --event <event>    JSON-serialized PrintNanny Event. See /api/events schema for supported events\n    -h, --help             Print help information\n    -V, --version          Print version information\n")))}p.isMDXComponent=!0}}]);